setstate
-------------------------------------------------------------------------------------
add and subtract two numbers using function component
import React from "react";
import { useState } from "react";

export default function Test() {
  const [val, setval] = useState({});
  const add = () => {
    setval((item) => ({
      ...item,
      addition: parseInt(val.x) + parseInt(val.y),
      type: "add",
    }));
    console.log(val);
  };
  const sub = () => {
    setval((item) => ({
      ...item,
      subtraction: parseInt(val.x) - parseInt(val.y),
      type: "sub",
    }));
    console.log(val);
  };
  const handlechange = (e) => {
    setval((item) => ({ ...item, [e.target.name]: e.target.value }));
  };
  return (
    <>
      <div>
        <p>
          <input
            type="text"
            name="x"
            onChange={(event) => handlechange(event)}
          />
        </p>
        <p>
          <input
            type="text"
            name="y"
            onChange={(event) => handlechange(event)}
          />
        </p>
        <p>
          <button onClick={() => add()}>+</button>
          <button onClick={() => sub()}>-</button>
        </p>
        <div>{val.type === "add" ? val.addition : val.subtraction}</div>
      </div>
    </>
  );
}

-------------------------------------------------------------------------------------
import React from "react";
class Test1 extends React.Component {
  constructor(props) {
    super(props);
    this.state = { amt: 120 };
  }
  addamount() {
    this.setState((state, props) => {
      return { amt: state.amt + 1 };
    });
  }
  render() {
    return <div onClick={() => this.addamount()}>click{this.state.amt}</div>;
  }
}
export default Test1;
------------------------------------------------------------------------------------
remove element of an array using index 
import React, {useState } from "react";
export default function Test1() {
  let arr = [1, 2, 3, 4, 5];
  let [val, setval] = useState(arr);
  const removearr = (id) => {
    const arr = val.filter((item, index) => index !== id);
    setval(arr);
    //setval(item => item.filter((item,index) => index !== id)); //in one line using state previous state
  };
  return (
    <>
      {console.log(val)}
      {val.map((item, index) => {
        return (
          <div key={item.toString()}>
            {item}
            <span onClick={() => removearr(index)}>Remove</span>
          </div>
        );
      })}
    </>
  );
}
------------------------------------------------------------------------------------
add and remove object from an object array
import React, {useState } from "react";
import items from "./data";
export default function Test1() {
  let [val, setval] = useState(items);
  let [total, settotal] = useState(0);
  let arr = {
    id: 200,
    name: "Grape Juice 200",
    amount: 200,
    spendDate: "2020-10-20",
    category: "Food 200",
  }

  const removearr = (id) => {
    setval(item => item.filter((item,index) => item.id !== id));
  };
   const findtotal = () =>{
    let sum =0;
    val.forEach(item => {
      sum += item.amount;
      settotal(sum);
    })
  }
  const addarr = (obj) => {
    console.log(val)
    setval([...val, obj])
    
    //  val.push(obj) //another way
    //  setval(val)
  }
  return (
    <>
      {console.log(val)}
      {val.map((item, index) => {
        return (
          <div key={item.id.toString()}>
            {item.id}
            <span onClick={() => removearr(item.id)}>Remove</span>
          </div>
        );
      })}
      <button onClick={() => addarr(arr)}>Add Item</button>
      <p>total is {total}</p>
    </>
  );
}

 
------------------------------------------------------------------------------------
dataservice
-------------------------------------------------------------------------------------
import { useState, useEffect } from "react";
const UserData = (url) => {
  const [data, setData] = useState([]);
  useEffect(() => {
    fetch(url)
      .then((items) => items.json())
      .then((data) => setData(data));
  }, [url]);
  return [data];
};
export default UserData;
----------------
call dataservice

import "./App.css";
import Userlist from "./components/Userlist";
import UserData from "./Dataservice";
function App() {
  const [data] = UserData('https://jsonplaceholder.typicode.com/users')
  const records =  data.map((items, key) => {
    return <Userlist key={key} data={items} />;
  })
  return (
    <>
      {records}
    </>
  );
}
export default App;
------------------------
inline style
<div style={{ 'color': 'red', 'fontWeight': 'bold'}}>{recs.data.name}</div>
------------------------
pass value to function

function Userlist(recs){
 function show(v){
        console.log(v)
    }
    return (
        <>
            <div style={{ 'color': 'red', 'fontWeight': 'bold'}}>{recs.data.name}</div>
            <div onClick={()=>show(recs.data.email)}>{recs.data.email}</div>
------------------------
pass object
   function show(v){
        console.log(v.data.id)
    }
<div onClick={()=>show(recs)}>{recs.data.email}</div>
------------------------
event
function Test1(){
    const add = (val) => {
        console.log(val.target.innerHTML)
    }
    const div = (x) => {
        return x/10;
    }
    const showval = (e) => {
        console.log(e)
    }
    const myelem = (
        <>
            <h1 onClick={(e)=>add(e)}>Hi..{div(7)}</h1>
            <p style={{'fontSize': '20px', 'color': 'blue'}}>test style</p>
            <input onChange={(e) => showval(e.target.value)}></input>
        </>
    )
    return (
        <>
           {myelem}
           {myelem}
        </>
    )
}
-----------------------------------------
 const showval = (e) => {
        console.log(e.target.value)
    }
 -----
 <input onChange={showval.bind(this)}></input>
 
 ----------------------------------------------
without useeffect
import { useState } from "react";
import "./Test2.css";
function Test2() {
  const [x, setx] = useState([]);
  async function getdata() {
    await fetch("https://jsonplaceholder.typicode.com/users")
      .then((item) => item.json())
      .then((data) => setx(data));
  }
  return (
    <>
      <button onClick={() => getdata()}>click</button>
      {x.map((items, key) => (
        <div key={key}>
          <p>{items.id}</p>
          <p> {items.name}</p>
        </div>
      ))}
    </>
  );
}
export default Test2;
--------------------------------------------------------
form input
import { useState, useRef } from "react";

const Testform = () => {
  const [message, setMessage] = useState("");
  const [message1, setMessage1] = useState("");
  let username, password;
  const inputRef = useRef('');
  const handleChange = (event) => {
    console.log(event.target.type)
    let src = (event.target.name)
    if(src === 'username') username = event.target.value;
    if(src === 'password') password = event.target.value;
  };

  const handleClick = (event) => {
    event.preventDefault();
    setMessage(username);
    setMessage1(password);
    console.log(inputRef.current.value);
  };

  return (
    <div>
      <div><input
        type="text"
        name="username"
        onChange={handleChange}
        autoComplete="off"
      />
      </div>
      <div><input
        type="text"
        name="password"
        onChange={handleChange}
        autoComplete="off"
      />
      </div>
      <div><input
        type="text"
        ref={inputRef}
        name="unit"
        onChange={handleChange}
        autoComplete="off"
      />
      </div>

      <p>Message: {message}</p>
      <p>Message1: {message1}</p>
      <p>Message2: {inputRef.current.value}</p>

      <button onClick={handleClick}>Click</button>
    </div>
  );
};

export default Testform;
--------------------------------------------------------
use this way to handle multiple inputs
import { useState } from "react";

function Testform() {
  const initialValues = {
    username: "",
    age: "",
    gender: ""
  };
  const [inputs, setInputs] = useState(initialValues);
  const [showdata, setshowdata] = useState(false);

  const handleChange = (event) => {
    const { name, value } = event.target;
    setInputs({ ...inputs, [name]: value });
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    console.log(inputs);
    setshowdata(true);
  };

  return (
     { (showdata === true) ? <p>{inputs.username}</p>:<></>}
    <form onSubmit={handleSubmit}>
      <label>
        Enter your name:
        <input
          type="text"
          name="username"
          value={inputs.username}
          onChange={handleChange}
        />
      </label>
      <label>
        Enter your age:
        <input
          type="text"
          name="age"
          value={inputs.age}
          onChange={handleChange}
        />
      </label>
      <label>
        Enter your gender:
        <input
          type="text"
          name="gender"
          value={inputs.gender}
          onChange={handleChange}
        />
      </label>
      <input type="submit" />
    </form>
  );
}

export default Testform;
------------------------------------------------------
multiple input fields class component
import React from "react";
export default class Home extends React.Component{
    constructor(){
        super();
        this.state = {'val': 0, 'val1': 0, 'sum': 0}
    }
    sum = () => {
        let f = parseFloat(this.state.val);
        let s = parseFloat(this.state.val1);
        this.setState({'sum': f+s})
    }
    inputHandler = (event) => {
        this.setState({[event.target.name] : event.target.value})
    }
    handleSubmit = (event) => {
        event.preventDefault();
    }
    render(){
        return (
            <div>
               <form onSubmit={(event) => this.handleSubmit(event)}>
                    <input name="val"  type="text"  onChange={this.inputHandler}></input><br/>
                    <input name="val1" type="text"  onChange={this.inputHandler}></input><br/>
                    <button onClick={this.sum}>sum</button><br />
                    {this.state.sum}
               </form>
            </div>
        )
    }
}

------------------------------------------------------
multiple checkbox example

import React from 'react';
export default class FormTest extends React.Component{
    constructor(){
        super();
        this.state = {
            category: [
                {id: 1, value: 'high', checked: false},
                {id: 2, value: 'moderate', checked: false},
                {id: 3, value: 'low', checked: false}
            ]
        }
    }
    meth(event){
        let items = this.state.category;
        items.forEach(item => {
            if(item.value === event.target.value){
                item.checked = event.target.checked;
            }
        });
        this.setState({
            category: items
        });
    }
    handlesubmit(event){
        event.preventDefault();
        console.log(this.state.category)
         let res = this.state.category.filter(item => {
            return item.checked === true
        })
        console.log(res)
    }
    render(){
        return(
            <form onSubmit={this.handlesubmit.bind(this)}>
                {
                    this.state.category.map((item, key) =>(
                        <div key={key}>
                            <label>{item.value}</label>
                            <input 
                                onChange={this.meth.bind(this)}
                                type='checkbox' 
                                id={item.id} 
                                name={item.value} 
                                value={item.value} 
                            />
                        </div>
                    ))
                }
                <button type='submit'>click</button>
            </form>
        )
    }
}
------------------------------------------------------------------------
multiple radio
import React from 'react';
export default class FormTest extends React.Component{
    constructor(){
        super();
        this.state = {
            category: [
                {id: 1, value: 'high', checked: false},
                {id: 2, value: 'moderate', checked: false},
                {id: 3, value: 'low', checked: false}
            ]
        }
    }
    meth(event){
        let items = this.state.category;
        items.forEach(item => {
            if(item.value === event.target.value){
                item.checked = event.target.checked;
                console.warn(item.value, event.target.value,item.checked, event.target.checked);
            }else{
                item.checked = false;
            }
        });
        this.setState({
            category: items
        });
    }
    handlesubmit(event){
        event.preventDefault();
        console.log(this.state.category)
          let res = this.state.category.find(item => {
            return item.checked === true
        })
        console.log(res.value)
    }
    render(){
        return(
            <form onSubmit={this.handlesubmit.bind(this)}>
                {
                    this.state.category.map((item, key) =>(
                        <div key={key}>
                            <label>{item.value}</label>
                            <input 
                                onChange={this.meth.bind(this)}
                                type='radio'
                                name='same' 
                                value={item.value} 
                            />
                        </div>
                    ))
                }
                <button type='submit'>click</button>
            </form>
        )
    }
}
--------------------------------------------------------------------------------
proptype
import React from "react";
import PropTypes from "prop-types";
function Test1(props) {
  return (
    <>
      <div>{props.data.id}</div>
      <div>{props.data.name}</div>
      <div>{props.data1}</div>
    </>
  );
}
Test1.propTypes = {
  data: PropTypes.shape({
    id: PropTypes.number,
    name: PropTypes.string,
  }),
  data1: PropTypes.oneOf(['tt','mm','ram'])
};
export default function Test() {
  let data = { id: 65, name: '88' };
  let str = "ram"
  return (
    <div>
      <Test1 data={data} data1={str} />
    </div>
  );
}
--------------------------------------------------------------------------------------------
