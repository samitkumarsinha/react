test1.jsx
--------------
import React, { useState, useEffect } from "react";
import axios from "axios";
import Mycomp from "./mycomp";
export default function Test1() {
  const [rec, setrec] = useState([]);
  const [loading, setloading] = useState(true);
  useEffect(() => {
    const getitems = async () => {
      const result1 = await axios("https://jsonplaceholder.typicode.com/users"); //with axios
      //const result = await fetch("https://jsonplaceholder.typicode.com/users"); //with fetch 
      //const result1 = await result1.json(); //with fetch 
      //setrec(result1);//with fetch 
      setrec(result1.data);
      setloading(false);
    };
    getitems();
  }, []);
  return (<div>
    <Mycomp isloading={loading} items={rec} />
  </div>);
}
-----------------------------------------------------
mycomp.jsx
import React from 'react'
import Loader from './loader'
export default function Mycomp({isloading, items}) {
  return isloading ? (
    <Loader/>
  ):(
    <div>
        {items.map((data,key) => {
            return (
                <div key={key}>
                    <p>{data.id}</p>
                </div>
            )
        })}
    </div>
  )
}
-----------------------------------------------------------
loader.jsx
import React from "react";
import { Audio } from "react-loader-spinner";
import './loader.css';
export default function Loader() {
  return (
    <div>
      <Audio
        height="80"
        width="80"
        radius="9"
        color="green"
        ariaLabel="three-dots-loading"
        wrapperStyle={{backgroundColor:'rgba(255, 255, 255, .5)'}}
        wrapperClass="overlay-container"
      />
    </div>
  );
}
-----------------------------------------------------------------
loader.css
.overlay-container{
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    /* background: rgba(255, 255, 255, .5) */
  }
  ------------------------------------------------------------------------------------------------
  
